{
    "swagger": "2.0", 
    "info": {
        "title": "Service Quality Management", 
        "description": "This is Swagger UI environment generated for the TMF Service Quality Management specification", 
        "version": "2.0"
    }, 
    "host": "biologeek.orange-labs.fr", 
    "basePath": "/tmf-api/serviceQualityManagement/v2/", 
    "schemes": [
        "https"
    ], 
    "consumes": [
        "application/json"
    ], 
    "produces": [
        "application/json"
    ], 
    "paths": {
        "/serviceLevelObjective": {
            "get": {
                "operationId": "listServiceLevelObjective", 
                "summary": "List or find 'ServiceLevelObjective' objects", 
                "tags": [
                    "serviceLevelObjective"
                ], 
                "parameters": [
                    {
                        "type": "string", 
                        "required": false, 
                        "in": "query", 
                        "name": "fields", 
                        "description": "Comma separated properties to display in response"
                    }, 
                    {
                        "type": "integer", 
                        "required": false, 
                        "in": "query", 
                        "name": "offset", 
                        "description": "Requested index for start of resources to be provided in response"
                    }, 
                    {
                        "type": "integer", 
                        "required": false, 
                        "in": "query", 
                        "name": "limit", 
                        "description": "Requested number of resources to be provided in response"
                    }, 
                    {
                        "in": "query", 
                        "type": "string", 
                        "name": "conformanceComparator", 
                        "description": "For filtering on the base of 'conformanceComparator' field (equality)"
                    }, 
                    {
                        "format": "date-time", 
                        "in": "query", 
                        "type": "string", 
                        "name": "conformancePeriod.endDateTime", 
                        "description": "For filtering on the base of 'endDateTime' field (equality)"
                    }, 
                    {
                        "name": "conformancePeriod.endDateTime.gt", 
                        "description": "For filtering on the base of 'endDateTime' field (great than)", 
                        "type": "string", 
                        "format": "date-time", 
                        "in": "query"
                    }, 
                    {
                        "name": "conformancePeriod.endDateTime.lt", 
                        "description": "For filtering on the base of 'endDateTime' field (less than)", 
                        "type": "string", 
                        "format": "date-time", 
                        "in": "query"
                    }, 
                    {
                        "format": "date-time", 
                        "in": "query", 
                        "type": "string", 
                        "name": "conformancePeriod.startDateTime", 
                        "description": "For filtering on the base of 'startDateTime' field (equality)"
                    }, 
                    {
                        "name": "conformancePeriod.startDateTime.gt", 
                        "description": "For filtering on the base of 'startDateTime' field (great than)", 
                        "type": "string", 
                        "format": "date-time", 
                        "in": "query"
                    }, 
                    {
                        "name": "conformancePeriod.startDateTime.lt", 
                        "description": "For filtering on the base of 'startDateTime' field (less than)", 
                        "type": "string", 
                        "format": "date-time", 
                        "in": "query"
                    }, 
                    {
                        "in": "query", 
                        "type": "string", 
                        "name": "conformanceTarget", 
                        "description": "For filtering on the base of 'conformanceTarget' field (equality)"
                    }, 
                    {
                        "in": "query", 
                        "type": "string", 
                        "name": "graceTimes", 
                        "description": "For filtering on the base of 'graceTimes' field (equality)"
                    }, 
                    {
                        "in": "query", 
                        "type": "string", 
                        "name": "name", 
                        "description": "For filtering on the base of 'name' field (equality)"
                    }, 
                    {
                        "in": "query", 
                        "type": "string", 
                        "name": "thresholdTarget", 
                        "description": "For filtering on the base of 'thresholdTarget' field (equality)"
                    }, 
                    {
                        "format": "date-time", 
                        "in": "query", 
                        "type": "string", 
                        "name": "tolerancePeriod.endDateTime", 
                        "description": "For filtering on the base of 'endDateTime' field (equality)"
                    }, 
                    {
                        "name": "tolerancePeriod.endDateTime.gt", 
                        "description": "For filtering on the base of 'endDateTime' field (great than)", 
                        "type": "string", 
                        "format": "date-time", 
                        "in": "query"
                    }, 
                    {
                        "name": "tolerancePeriod.endDateTime.lt", 
                        "description": "For filtering on the base of 'endDateTime' field (less than)", 
                        "type": "string", 
                        "format": "date-time", 
                        "in": "query"
                    }, 
                    {
                        "format": "date-time", 
                        "in": "query", 
                        "type": "string", 
                        "name": "tolerancePeriod.startDateTime", 
                        "description": "For filtering on the base of 'startDateTime' field (equality)"
                    }, 
                    {
                        "name": "tolerancePeriod.startDateTime.gt", 
                        "description": "For filtering on the base of 'startDateTime' field (great than)", 
                        "type": "string", 
                        "format": "date-time", 
                        "in": "query"
                    }, 
                    {
                        "name": "tolerancePeriod.startDateTime.lt", 
                        "description": "For filtering on the base of 'startDateTime' field (less than)", 
                        "type": "string", 
                        "format": "date-time", 
                        "in": "query"
                    }, 
                    {
                        "in": "query", 
                        "type": "string", 
                        "name": "toleranceTarget", 
                        "description": "For filtering on the base of 'toleranceTarget' field (equality)"
                    }, 
                    {
                        "format": "date-time", 
                        "in": "query", 
                        "type": "string", 
                        "name": "validFor.endDateTime", 
                        "description": "For filtering on the base of 'endDateTime' field (equality)"
                    }, 
                    {
                        "name": "validFor.endDateTime.gt", 
                        "description": "For filtering on the base of 'endDateTime' field (great than)", 
                        "type": "string", 
                        "format": "date-time", 
                        "in": "query"
                    }, 
                    {
                        "name": "validFor.endDateTime.lt", 
                        "description": "For filtering on the base of 'endDateTime' field (less than)", 
                        "type": "string", 
                        "format": "date-time", 
                        "in": "query"
                    }, 
                    {
                        "format": "date-time", 
                        "in": "query", 
                        "type": "string", 
                        "name": "validFor.startDateTime", 
                        "description": "For filtering on the base of 'startDateTime' field (equality)"
                    }, 
                    {
                        "name": "validFor.startDateTime.gt", 
                        "description": "For filtering on the base of 'startDateTime' field (great than)", 
                        "type": "string", 
                        "format": "date-time", 
                        "in": "query"
                    }, 
                    {
                        "name": "validFor.startDateTime.lt", 
                        "description": "For filtering on the base of 'startDateTime' field (less than)", 
                        "type": "string", 
                        "format": "date-time", 
                        "in": "query"
                    }, 
                    {
                        "in": "query", 
                        "type": "string", 
                        "name": "serviceLevelSpecParameter.name", 
                        "description": "For filtering on the base of 'name' field (equality)"
                    }, 
                    {
                        "in": "query", 
                        "type": "string", 
                        "name": "serviceLevelSpecParameter.serviceParmCategory", 
                        "description": "For filtering on the base of 'serviceParmCategory' field (equality)"
                    }, 
                    {
                        "in": "query", 
                        "type": "string", 
                        "name": "serviceLevelSpecParameter.serviceParmPerspective", 
                        "description": "For filtering on the base of 'serviceParmPerspective' field (equality)"
                    }, 
                    {
                        "in": "query", 
                        "type": "string", 
                        "name": "serviceLevelSpecParameter.transformationAlgorithmOfKQI", 
                        "description": "For filtering on the base of 'transformationAlgorithmOfKQI' field (equality)"
                    }, 
                    {
                        "in": "query", 
                        "type": "string", 
                        "name": "serviceLevelSpecParameter.type", 
                        "description": "For filtering on the base of 'type' field (equality)"
                    }, 
                    {
                        "in": "query", 
                        "type": "string", 
                        "name": "serviceLevelSpecConsequence.prescribedAction", 
                        "description": "For filtering on the base of 'prescribedAction' field (equality)"
                    }
                ], 
                "responses": {
                    "200": {
                        "description": "Ok", 
                        "schema": {
                            "items": {
                                "$ref": "#/definitions/ServiceLevelObjective"
                            }, 
                            "type": "array"
                        }
                    }, 
                    "400": {
                        "description": "Bad Request", 
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }, 
                    "500": {
                        "description": "Internal Server Error", 
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }, 
            "post": {
                "operationId": "createServiceLevelObjective", 
                "summary": "Creates a 'ServiceLevelObjective'", 
                "tags": [
                    "serviceLevelObjective"
                ], 
                "parameters": [
                    {
                        "schema": {
                            "$ref": "#/definitions/ServiceLevelObjective_Create"
                        }, 
                        "required": true, 
                        "in": "body", 
                        "name": "serviceLevelObjective", 
                        "description": "The Service Level Objective to be created"
                    }
                ], 
                "responses": {
                    "201": {
                        "description": "Created", 
                        "schema": {
                            "$ref": "#/definitions/ServiceLevelObjective"
                        }
                    }, 
                    "400": {
                        "description": "Bad Request", 
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }, 
                    "500": {
                        "description": "Internal Server Error", 
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        }, 
        "/serviceLevelObjective/{id}": {
            "get": {
                "operationId": "retrieveServiceLevelObjective", 
                "summary": "Retrieves a 'ServiceLevelObjective' by Id", 
                "tags": [
                    "serviceLevelObjective"
                ], 
                "parameters": [
                    {
                        "required": true, 
                        "type": "string", 
                        "name": "id", 
                        "in": "path", 
                        "description": "Identifier of the Service Level Objective"
                    }
                ], 
                "responses": {
                    "200": {
                        "description": "Ok", 
                        "schema": {
                            "items": {
                                "$ref": "#/definitions/ServiceLevelObjective"
                            }, 
                            "type": "array"
                        }
                    }, 
                    "400": {
                        "description": "Bad Request", 
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }, 
                    "404": {
                        "description": "Not Found", 
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }, 
                    "500": {
                        "description": "Internal Server Error", 
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }, 
            "patch": {
                "operationId": "patchServiceLevelObjective", 
                "summary": "Updates partially a 'ServiceLevelObjective' by Id", 
                "tags": [
                    "serviceLevelObjective"
                ], 
                "parameters": [
                    {
                        "required": true, 
                        "type": "string", 
                        "name": "id", 
                        "in": "path", 
                        "description": "Identifier of the Service Level Objective"
                    }, 
                    {
                        "schema": {
                            "$ref": "#/definitions/ServiceLevelObjective_Update"
                        }, 
                        "required": true, 
                        "in": "body", 
                        "name": "serviceLevelObjective", 
                        "description": "The Service Level Objective to be updated"
                    }
                ], 
                "responses": {
                    "201": {
                        "description": "Updated", 
                        "schema": {
                            "$ref": "#/definitions/ServiceLevelObjective"
                        }
                    }, 
                    "400": {
                        "description": "Bad Request", 
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }, 
                    "404": {
                        "description": "Not Found", 
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }, 
                    "500": {
                        "description": "Internal Server Error", 
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }, 
            "delete": {
                "operationId": "deleteServiceLevelObjective", 
                "summary": "Deletes a 'ServiceLevelObjective' by Id", 
                "tags": [
                    "serviceLevelObjective"
                ], 
                "parameters": [
                    {
                        "required": true, 
                        "type": "string", 
                        "name": "id", 
                        "in": "path", 
                        "description": "Identifier of the Service Level Objective"
                    }
                ], 
                "responses": {
                    "204": {
                        "description": "Deleted"
                    }, 
                    "400": {
                        "description": "Bad Request", 
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }, 
                    "404": {
                        "description": "Not Found", 
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }, 
                    "500": {
                        "description": "Internal Server Error", 
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        }, 
        "/serviceLevelSpecification": {
            "get": {
                "operationId": "listServiceLevelSpecification", 
                "summary": "List or find 'ServiceLevelSpecification' objects", 
                "tags": [
                    "serviceLevelSpecification"
                ], 
                "parameters": [
                    {
                        "type": "string", 
                        "required": false, 
                        "in": "query", 
                        "name": "fields", 
                        "description": "Comma separated properties to display in response"
                    }, 
                    {
                        "type": "integer", 
                        "required": false, 
                        "in": "query", 
                        "name": "offset", 
                        "description": "Requested index for start of resources to be provided in response"
                    }, 
                    {
                        "type": "integer", 
                        "required": false, 
                        "in": "query", 
                        "name": "limit", 
                        "description": "Requested number of resources to be provided in response"
                    }, 
                    {
                        "in": "query", 
                        "type": "string", 
                        "name": "name", 
                        "description": "For filtering on the base of 'name' field (equality)"
                    }, 
                    {
                        "format": "date-time", 
                        "in": "query", 
                        "type": "string", 
                        "name": "validFor.endDateTime", 
                        "description": "For filtering on the base of 'endDateTime' field (equality)"
                    }, 
                    {
                        "name": "validFor.endDateTime.gt", 
                        "description": "For filtering on the base of 'endDateTime' field (great than)", 
                        "type": "string", 
                        "format": "date-time", 
                        "in": "query"
                    }, 
                    {
                        "name": "validFor.endDateTime.lt", 
                        "description": "For filtering on the base of 'endDateTime' field (less than)", 
                        "type": "string", 
                        "format": "date-time", 
                        "in": "query"
                    }, 
                    {
                        "format": "date-time", 
                        "in": "query", 
                        "type": "string", 
                        "name": "validFor.startDateTime", 
                        "description": "For filtering on the base of 'startDateTime' field (equality)"
                    }, 
                    {
                        "name": "validFor.startDateTime.gt", 
                        "description": "For filtering on the base of 'startDateTime' field (great than)", 
                        "type": "string", 
                        "format": "date-time", 
                        "in": "query"
                    }, 
                    {
                        "name": "validFor.startDateTime.lt", 
                        "description": "For filtering on the base of 'startDateTime' field (less than)", 
                        "type": "string", 
                        "format": "date-time", 
                        "in": "query"
                    }
                ], 
                "responses": {
                    "200": {
                        "description": "Ok", 
                        "schema": {
                            "items": {
                                "$ref": "#/definitions/ServiceLevelSpecification"
                            }, 
                            "type": "array"
                        }
                    }, 
                    "400": {
                        "description": "Bad Request", 
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }, 
                    "500": {
                        "description": "Internal Server Error", 
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }, 
            "post": {
                "operationId": "createServiceLevelSpecification", 
                "summary": "Creates a 'ServiceLevelSpecification'", 
                "tags": [
                    "serviceLevelSpecification"
                ], 
                "parameters": [
                    {
                        "schema": {
                            "$ref": "#/definitions/ServiceLevelSpecification_Create"
                        }, 
                        "required": true, 
                        "in": "body", 
                        "name": "serviceLevelSpecification", 
                        "description": "The Service Level Specification to be created"
                    }
                ], 
                "responses": {
                    "201": {
                        "description": "Created", 
                        "schema": {
                            "$ref": "#/definitions/ServiceLevelSpecification"
                        }
                    }, 
                    "400": {
                        "description": "Bad Request", 
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }, 
                    "500": {
                        "description": "Internal Server Error", 
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        }, 
        "/serviceLevelSpecification/{id}": {
            "get": {
                "operationId": "retrieveServiceLevelSpecification", 
                "summary": "Retrieves a 'ServiceLevelSpecification' by Id", 
                "tags": [
                    "serviceLevelSpecification"
                ], 
                "parameters": [
                    {
                        "required": true, 
                        "type": "string", 
                        "name": "id", 
                        "in": "path", 
                        "description": "Identifier of the Service Level Specification"
                    }
                ], 
                "responses": {
                    "200": {
                        "description": "Ok", 
                        "schema": {
                            "items": {
                                "$ref": "#/definitions/ServiceLevelSpecification"
                            }, 
                            "type": "array"
                        }
                    }, 
                    "400": {
                        "description": "Bad Request", 
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }, 
                    "404": {
                        "description": "Not Found", 
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }, 
                    "500": {
                        "description": "Internal Server Error", 
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }, 
            "patch": {
                "operationId": "patchServiceLevelSpecification", 
                "summary": "Updates partially a 'ServiceLevelSpecification' by Id", 
                "tags": [
                    "serviceLevelSpecification"
                ], 
                "parameters": [
                    {
                        "required": true, 
                        "type": "string", 
                        "name": "id", 
                        "in": "path", 
                        "description": "Identifier of the Service Level Specification"
                    }, 
                    {
                        "schema": {
                            "$ref": "#/definitions/ServiceLevelSpecification_Update"
                        }, 
                        "required": true, 
                        "in": "body", 
                        "name": "serviceLevelSpecification", 
                        "description": "The Service Level Specification to be updated"
                    }
                ], 
                "responses": {
                    "201": {
                        "description": "Updated", 
                        "schema": {
                            "$ref": "#/definitions/ServiceLevelSpecification"
                        }
                    }, 
                    "400": {
                        "description": "Bad Request", 
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }, 
                    "404": {
                        "description": "Not Found", 
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }, 
                    "500": {
                        "description": "Internal Server Error", 
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }, 
            "delete": {
                "operationId": "deleteServiceLevelSpecification", 
                "summary": "Deletes a 'ServiceLevelSpecification' by Id", 
                "tags": [
                    "serviceLevelSpecification"
                ], 
                "parameters": [
                    {
                        "required": true, 
                        "type": "string", 
                        "name": "id", 
                        "in": "path", 
                        "description": "Identifier of the Service Level Specification"
                    }
                ], 
                "responses": {
                    "204": {
                        "description": "Deleted"
                    }, 
                    "400": {
                        "description": "Bad Request", 
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }, 
                    "404": {
                        "description": "Not Found", 
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }, 
                    "500": {
                        "description": "Internal Server Error", 
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        }, 
        "/hub": {
            "post": {
                "operationId": "registerListener", 
                "summary": "Register a listener", 
                "description": "Sets the communication endpoint address the service instance must use to deliver information about its health state, execution state, failures and metrics.", 
                "tags": [
                    "events subscription"
                ], 
                "parameters": [
                    {
                        "name": "data", 
                        "schema": {
                            "$ref": "#/definitions/EventSubscriptionInput"
                        }, 
                        "required": true, 
                        "in": "body", 
                        "description": "Data containing the callback endpoint to deliver the information"
                    }
                ], 
                "responses": {
                    "201": {
                        "description": "Subscribed", 
                        "schema": {
                            "$ref": "#/definitions/EventSubscription"
                        }
                    }, 
                    "500": {
                        "description": "Internal Server Error", 
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }, 
                    "400": {
                        "description": "Bad Request", 
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        }, 
        "/hub/{id}": {
            "delete": {
                "operationId": "unregisterListener", 
                "summary": "Unregister a listener", 
                "description": "Resets the communication endpoint address the service instance must use to deliver information about its health state, execution state, failures and metrics.", 
                "tags": [
                    "events subscription"
                ], 
                "parameters": [
                    {
                        "name": "id", 
                        "type": "string", 
                        "required": true, 
                        "in": "path", 
                        "description": "The id of the registered listener"
                    }
                ], 
                "responses": {
                    "201": {
                        "description": "Unsubscribed"
                    }, 
                    "404": {
                        "description": "Not Found", 
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }, 
                    "500": {
                        "description": "Internal Server Error", 
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        }
    }, 
    "definitions": {
        "ServiceLevelObjective": {
            "type": "object", 
            "description": "Service level objectives are defined in terms of parameters and metrics, thresholds, and tolerances \nassociated with the parameters.", 
            "required": [
                "name"
            ], 
            "properties": {
                "conformanceComparator": {
                    "type": "string", 
                    "description": "An operator that specifies whether a Service Level Objective is \nviolated above or below the conformanceTarget."
                }, 
                "conformancePeriod": {
                    "$ref": "#/definitions/TimePeriod", 
                    "description": "An interval of time during which the Conformance Target must be measured."
                }, 
                "conformanceTarget": {
                    "type": "string", 
                    "description": "A value used to determine if Service Level Objective is met. \nThe data type should be adjusted case by case."
                }, 
                "graceTimes": {
                    "type": "string", 
                    "description": "The number of times an objective can remain un-updated without \na violation of a Service Level Agreement in reference to a measurement period and/or Service Level Agreement reporting period."
                }, 
                "href": {
                    "type": "string", 
                    "description": "The hyperlink to access a service level objective."
                }, 
                "id": {
                    "type": "string", 
                    "description": "The identifier of a service level objectives."
                }, 
                "name": {
                    "type": "string", 
                    "description": "The name of the service level objectives."
                }, 
                "thresholdTarget": {
                    "type": "string", 
                    "description": "A value that used to specify when a warning should be used \nthat indicates an objective is danger of not being met. Notice, the data type should be adjusted case by case."
                }, 
                "tolerancePeriod": {
                    "$ref": "#/definitions/TimePeriod"
                }, 
                "toleranceTarget": {
                    "type": "string", 
                    "description": "A value that specifies the allowable variation of a conformance \nTarget. The data type should be adjusted case by case."
                }, 
                "validFor": {
                    "$ref": "#/definitions/TimePeriod", 
                    "description": "A valid duration of a thing."
                }, 
                "serviceLevelSpecParameter": {
                    "$ref": "#/definitions/ServiceLevelSpecParameter"
                }, 
                "serviceLevelSpecConsequence": {
                    "type": "array", 
                    "items": {
                        "$ref": "#/definitions/ServiceLevelSpecConsequence"
                    }
                }, 
                "@type": {
                    "type": "string", 
                    "description": "The class type of the actual resource (for type extension)."
                }, 
                "@schemaLocation": {
                    "type": "string", 
                    "description": "A link to the schema describing a resource (for type extension)."
                }, 
                "@baseType": {
                    "type": "string", 
                    "description": "The base type for use in polymorphic collections"
                }
            }
        }, 
        "ServiceLevelObjective_Create": {
            "type": "object", 
            "description": "Service level objectives are defined in terms of parameters and metrics, thresholds, and tolerances \nassociated with the parameters.\nSkipped properties: id,href", 
            "required": [
                "conformanceTarget", 
                "conformanceComparator", 
                "serviceLevelSpecParameter"
            ], 
            "properties": {
                "conformanceComparator": {
                    "type": "string", 
                    "description": "An operator that specifies whether a Service Level Objective is \nviolated above or below the conformanceTarget."
                }, 
                "conformancePeriod": {
                    "$ref": "#/definitions/TimePeriod", 
                    "description": "An interval of time during which the Conformance Target must be measured."
                }, 
                "conformanceTarget": {
                    "type": "string", 
                    "description": "A value used to determine if Service Level Objective is met. \nThe data type should be adjusted case by case."
                }, 
                "graceTimes": {
                    "type": "string", 
                    "description": "The number of times an objective can remain un-updated without \na violation of a Service Level Agreement in reference to a measurement period and/or Service Level Agreement reporting period."
                }, 
                "name": {
                    "type": "string", 
                    "description": "The name of the service level objectives."
                }, 
                "thresholdTarget": {
                    "type": "string", 
                    "description": "A value that used to specify when a warning should be used \nthat indicates an objective is danger of not being met. Notice, the data type should be adjusted case by case."
                }, 
                "tolerancePeriod": {
                    "$ref": "#/definitions/TimePeriod"
                }, 
                "toleranceTarget": {
                    "type": "string", 
                    "description": "A value that specifies the allowable variation of a conformance \nTarget. The data type should be adjusted case by case."
                }, 
                "validFor": {
                    "$ref": "#/definitions/TimePeriod", 
                    "description": "A valid duration of a thing."
                }, 
                "serviceLevelSpecParameter": {
                    "$ref": "#/definitions/ServiceLevelSpecParameter"
                }, 
                "serviceLevelSpecConsequence": {
                    "type": "array", 
                    "items": {
                        "$ref": "#/definitions/ServiceLevelSpecConsequence"
                    }
                }, 
                "@type": {
                    "type": "string", 
                    "description": "The class type of the actual resource (for type extension)."
                }, 
                "@schemaLocation": {
                    "type": "string", 
                    "description": "A link to the schema describing a resource (for type extension)."
                }, 
                "@baseType": {
                    "type": "string", 
                    "description": "The base type for use in polymorphic collections"
                }
            }
        }, 
        "ServiceLevelObjective_Update": {
            "type": "object", 
            "description": "Service level objectives are defined in terms of parameters and metrics, thresholds, and tolerances \nassociated with the parameters.\nSkipped properties: id,href,id,href,validFor", 
            "properties": {
                "conformanceComparator": {
                    "type": "string", 
                    "description": "An operator that specifies whether a Service Level Objective is \nviolated above or below the conformanceTarget."
                }, 
                "conformancePeriod": {
                    "$ref": "#/definitions/TimePeriod", 
                    "description": "An interval of time during which the Conformance Target must be measured."
                }, 
                "conformanceTarget": {
                    "type": "string", 
                    "description": "A value used to determine if Service Level Objective is met. \nThe data type should be adjusted case by case."
                }, 
                "graceTimes": {
                    "type": "string", 
                    "description": "The number of times an objective can remain un-updated without \na violation of a Service Level Agreement in reference to a measurement period and/or Service Level Agreement reporting period."
                }, 
                "name": {
                    "type": "string", 
                    "description": "The name of the service level objectives."
                }, 
                "thresholdTarget": {
                    "type": "string", 
                    "description": "A value that used to specify when a warning should be used \nthat indicates an objective is danger of not being met. Notice, the data type should be adjusted case by case."
                }, 
                "tolerancePeriod": {
                    "$ref": "#/definitions/TimePeriod"
                }, 
                "toleranceTarget": {
                    "type": "string", 
                    "description": "A value that specifies the allowable variation of a conformance \nTarget. The data type should be adjusted case by case."
                }, 
                "serviceLevelSpecParameter": {
                    "$ref": "#/definitions/ServiceLevelSpecParameter"
                }, 
                "serviceLevelSpecConsequence": {
                    "type": "array", 
                    "items": {
                        "$ref": "#/definitions/ServiceLevelSpecConsequence"
                    }
                }, 
                "@type": {
                    "type": "string", 
                    "description": "The class type of the actual resource (for type extension)."
                }, 
                "@schemaLocation": {
                    "type": "string", 
                    "description": "A link to the schema describing a resource (for type extension)."
                }, 
                "@baseType": {
                    "type": "string", 
                    "description": "The base type for use in polymorphic collections"
                }
            }
        }, 
        "ServiceLevelSpecification": {
            "type": "object", 
            "description": "A Service Level Specification represents a pre-defined or negotiated set of Service Level \nObjectives. In addition, certain consequences are associated with not meeting the Service Level \nObjectives. Service Level Agreements are expressed in terms of Service Level Specifications.", 
            "properties": {
                "description": {
                    "type": "string", 
                    "description": "A brief introduction of a service level specification."
                }, 
                "href": {
                    "type": "string", 
                    "description": "The hyperlink to access a service level specification."
                }, 
                "id": {
                    "type": "string", 
                    "description": "The identifier to a service level specification."
                }, 
                "name": {
                    "type": "string", 
                    "description": "The name of Service Level Specification"
                }, 
                "validFor": {
                    "$ref": "#/definitions/TimePeriod", 
                    "description": "A valid duration of a thing."
                }, 
                "relatedServiceLevelObjective": {
                    "type": "array", 
                    "items": {
                        "$ref": "#/definitions/RelatedServiceLevelObjectiveRef"
                    }
                }, 
                "@type": {
                    "type": "string", 
                    "description": "The class type of the actual resource (for type extension)."
                }, 
                "@schemaLocation": {
                    "type": "string", 
                    "description": "A link to the schema describing a resource (for type extension)."
                }, 
                "@baseType": {
                    "type": "string", 
                    "description": "The base type for use in polymorphic collections"
                }
            }
        }, 
        "ServiceLevelSpecification_Create": {
            "type": "object", 
            "description": "A Service Level Specification represents a pre-defined or negotiated set of Service Level \nObjectives. In addition, certain consequences are associated with not meeting the Service Level \nObjectives. Service Level Agreements are expressed in terms of Service Level Specifications.\nSkipped properties: id,href", 
            "required": [
                "name", 
                "relatedServiceLevelObjective"
            ], 
            "properties": {
                "description": {
                    "type": "string", 
                    "description": "A brief introduction of a service level specification."
                }, 
                "name": {
                    "type": "string", 
                    "description": "The name of Service Level Specification"
                }, 
                "validFor": {
                    "$ref": "#/definitions/TimePeriod", 
                    "description": "A valid duration of a thing."
                }, 
                "relatedServiceLevelObjective": {
                    "type": "array", 
                    "items": {
                        "$ref": "#/definitions/RelatedServiceLevelObjectiveRef"
                    }
                }, 
                "@type": {
                    "type": "string", 
                    "description": "The class type of the actual resource (for type extension)."
                }, 
                "@schemaLocation": {
                    "type": "string", 
                    "description": "A link to the schema describing a resource (for type extension)."
                }, 
                "@baseType": {
                    "type": "string", 
                    "description": "The base type for use in polymorphic collections"
                }
            }
        }, 
        "ServiceLevelSpecification_Update": {
            "type": "object", 
            "description": "A Service Level Specification represents a pre-defined or negotiated set of Service Level \nObjectives. In addition, certain consequences are associated with not meeting the Service Level \nObjectives. Service Level Agreements are expressed in terms of Service Level Specifications.\nSkipped properties: id,href,id,href,validFor", 
            "properties": {
                "description": {
                    "type": "string", 
                    "description": "A brief introduction of a service level specification."
                }, 
                "name": {
                    "type": "string", 
                    "description": "The name of Service Level Specification"
                }, 
                "relatedServiceLevelObjective": {
                    "type": "array", 
                    "items": {
                        "$ref": "#/definitions/RelatedServiceLevelObjectiveRef"
                    }
                }, 
                "@type": {
                    "type": "string", 
                    "description": "The class type of the actual resource (for type extension)."
                }, 
                "@schemaLocation": {
                    "type": "string", 
                    "description": "A link to the schema describing a resource (for type extension)."
                }, 
                "@baseType": {
                    "type": "string", 
                    "description": "The base type for use in polymorphic collections"
                }
            }
        }, 
        "TimePeriod": {
            "type": "object", 
            "description": "A base / value business entity used to represent a period of time between two timepoints.", 
            "properties": {
                "endDateTime": {
                    "type": "string", 
                    "format": "date-time", 
                    "description": "An instant of time, ending at the TimePeriod."
                }, 
                "startDateTime": {
                    "type": "string", 
                    "format": "date-time", 
                    "description": "An instant of time, starting at the TimePeriod"
                }
            }
        }, 
        "ServiceLevelSpecParameter": {
            "type": "object", 
            "description": "Service Level Specification parameters can be one of two types. A Key Quality Indicator (KQI) \nprovides a measurement of a specific aspect of the performance of a Product (i.e., Product \nSpecification, Product Offering, or Product) or a Service (i.e., Service Specification or Service).", 
            "required": [
                "name", 
                "relatedEntity"
            ], 
            "properties": {
                "name": {
                    "type": "string", 
                    "description": "The name of parameter."
                }, 
                "serviceParmCategory": {
                    "type": "string", 
                    "description": "A string that specifies whether the Service Level Specification Parameter is technology specific, service specific, or technology/service independent"
                }, 
                "serviceParmPerspective": {
                    "type": "string", 
                    "description": "A string that specifies whether the Service Level Specification \nParameter represents a single user instance parameter or a parameter that represents an aggregation."
                }, 
                "transformationAlgorithmOfKQI": {
                    "type": "string", 
                    "description": "The description of a logical step-by-step procedure used to \ncalculate the value of a KQI."
                }, 
                "type": {
                    "type": "string", 
                    "description": "Types of Service Level Specification parameters are KQI or KPI."
                }, 
                "validFor": {
                    "$ref": "#/definitions/TimePeriod", 
                    "description": "A valid duration of a thing."
                }, 
                "relatedEntity": {
                    "type": "array", 
                    "items": {
                        "$ref": "#/definitions/RelatedEntityRef"
                    }
                }, 
                "@type": {
                    "type": "string", 
                    "description": "The class type of the actual resource (for type extension)."
                }
            }
        }, 
        "ServiceLevelSpecConsequence": {
            "type": "object", 
            "description": "Some consequences for the provider of the Service are resulted when the service level objective\ndoes not meet.", 
            "properties": {
                "prescribedAction": {
                    "type": "string", 
                    "description": "Recommended remedy for a violated Service Level Objective. \nThis could be a hyperlink to the recommended action."
                }, 
                "validFor": {
                    "$ref": "#/definitions/TimePeriod", 
                    "description": "A valid duration of a thing."
                }, 
                "@type": {
                    "type": "string", 
                    "description": "The class type of the actual resource (for type extension)."
                }
            }
        }, 
        "RelatedEntityRef": {
            "type": "object", 
            "description": "The related entity source of a KQI or KPI. A KQI draws its data from a number of sources, \nincluding Key Performance Indicators (KPIs).  A KPI provides a measurement of a specific aspect \nof the performance of a Service (whether it is a network- or a non-network-based Service) or a \ngroup of Services of the same type.", 
            "properties": {
                "herf": {
                    "type": "string", 
                    "description": "The hyperlink to access an entity."
                }, 
                "id": {
                    "type": "string", 
                    "description": "The identifier of an entity."
                }, 
                "name": {
                    "type": "string", 
                    "description": "The name of an entity."
                }, 
                "@referredType": {
                    "type": "string", 
                    "description": "The actual type of the target instance when needed for disambiguation."
                }
            }
        }, 
        "RelatedServiceLevelObjectiveRef": {
            "type": "object", 
            "description": "A set of Service Level Objectives that are contained in the Service Level Specification.", 
            "required": [
                "id", 
                "href"
            ], 
            "properties": {
                "href": {
                    "type": "string", 
                    "description": "The hyperlink to access a service level object."
                }, 
                "id": {
                    "type": "string", 
                    "description": "The identifier of a service level object."
                }, 
                "@referredType": {
                    "type": "string", 
                    "description": "The actual type of the target instance when needed for disambiguation."
                }
            }
        }, 
        "EventSubscription": {
            "required": [
                "id", 
                "callback"
            ], 
            "properties": {
                "id": {
                    "type": "string", 
                    "description": "Id of the listener"
                }, 
                "callback": {
                    "type": "string", 
                    "description": "The callback being registered."
                }, 
                "query": {
                    "type": "string", 
                    "description": "additional data to be passed"
                }
            }
        }, 
        "EventSubscriptionInput": {
            "required": [
                "callback"
            ], 
            "properties": {
                "callback": {
                    "type": "string", 
                    "description": "The callback being registered."
                }, 
                "query": {
                    "type": "string", 
                    "description": "additional data to be passed"
                }
            }
        }, 
        "Error": {
            "required": [
                "code", 
                "reason"
            ], 
            "properties": {
                "code": {
                    "type": "integer", 
                    "description": "Application related code."
                }, 
                "reason": {
                    "type": "integer", 
                    "description": "Text that explains the reason for error."
                }, 
                "message": {
                    "type": "string", 
                    "description": "(optional) Text that provide more details and corrective actions related to the error."
                }, 
                "status": {
                    "type": "integer", 
                    "description": "(optional) http error code extension like 400-2"
                }, 
                "referenceError": {
                    "type": "string", 
                    "description": "(optional) A URL to online documentation that provides more information about the error."
                }, 
                "@type": {
                    "type": "string", 
                    "description": "(optional) The class type of a REST resource."
                }, 
                "@schemaLocation": {
                    "type": "string", 
                    "description": "(optional) A link to the schema describing a REST resource."
                }
            }
        }
    }
}
